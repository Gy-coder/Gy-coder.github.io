<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gy的个人网站</title>
    <link>https://gy-coder.xyz/</link>
    <description>Recent content on Gy的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-Hans</language>
    <lastBuildDate>Wed, 27 Nov 2019 16:05:56 +0800</lastBuildDate>
    
	<atom:link href="https://gy-coder.xyz/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS之grid布局</title>
      <link>https://gy-coder.xyz/posts/css%E4%B9%8Bgrid%E5%B8%83%E5%B1%80/</link>
      <pubDate>Wed, 27 Nov 2019 16:05:56 +0800</pubDate>
      
      <guid>https://gy-coder.xyz/posts/css%E4%B9%8Bgrid%E5%B8%83%E5%B1%80/</guid>
      <description>grid 布局简介 grid 布局是 CSS 一种功能强大的布局方案，常用于二维布局
grid 的布局结构 和 flex 布局一样，grid 布局也分为容器部分(container)和容器内元素部分(items)
如何使用 grid 布局？ 使用 grid 布局比较简单，只需要在 CSS 中声明容器是 grid 容器就可以使用 grid 布局
&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;  .container{ display:grid/inline-grid; }  划分 grid 容器 grid-template-rows 属性用于划分网格行
grid-template-columns 属性用于划分网格列
属性的取值可以是非负数长度，可以是百分数，也可以是 fr
fr 是将空间按照份数成比例划分
.container{ grid-template-rows:25% 100px auto; grid-template-columns:40px 50px auto 50px 40px; }  如何为 items 选定范围？ 只需要确定构成 item 范围的四根线则可以确定 item 的范围，通过以下四个属性则可以确定
 grid-column-start grid-column-end grid-row-start grid-row-end
.items:nth-child(x){ grid-column-start:2; grid-column-end:5; grid-row-start:1; grid-row-end:3; }   划分例子 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;  .</description>
    </item>
    
    <item>
      <title>CSS之flex布局</title>
      <link>https://gy-coder.xyz/posts/css%E4%B9%8Bflex%E5%B8%83%E5%B1%80/</link>
      <pubDate>Sun, 24 Nov 2019 17:50:23 +0800</pubDate>
      
      <guid>https://gy-coder.xyz/posts/css%E4%B9%8Bflex%E5%B8%83%E5%B1%80/</guid>
      <description>什么是 flex 布局？ flex 是 Flexible Box 的缩写，意为&amp;rdquo;弹性布局&amp;rdquo;，是 CSS 布局的方式之一，flex 布局已经支持大多数浏览器
flex 布局的结构 Flex 布局由容器 container 和容器内的元素 items 构成
如何使用 flex 布局？ 使用 flex 布局比较简单，只需要在 CSS 中声明容器是 flex 容器就可以使用 flex 布局
&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;  .container{ display:flex/inline-flex; }  容器的样式  items 的流动方式(主轴方向):
.container{ flex-direction:row/row-reverse/column/column-reverse }  一个小 bug: 当 items 过多的时候不会另起一行，而是会挤压，items 会变小
 items 换行:
.container{ flex-wrap:nowrap/wrap/wrap-reverse; }  nowrap 是默认值，不换行
 主轴对齐方式:
.container{ justify-content:flex-start/flex-end/center/space-between/space-around/space-evenly; }  默认主轴是横轴
 次轴对齐:</description>
    </item>
    
    <item>
      <title>CSS盒模型</title>
      <link>https://gy-coder.xyz/posts/css%E7%9B%92%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Wed, 20 Nov 2019 16:10:34 +0800</pubDate>
      
      <guid>https://gy-coder.xyz/posts/css%E7%9B%92%E6%A8%A1%E5%9E%8B/</guid>
      <description>CSS盒模型 盒模型是CSS的重点之一，也是难点之一
CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。
盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。
当我们在浏览器中按下F12 就可以看到元素的盒模型
 盒模型基本元素:
 宽度:width 高度height 边距:margin 边框:border 内边距:padding(一个元素的内容和其边界之间的空间) 内容区content  盒模型的分类:
盒模型分为content-box和border-box两种
在声明时用box-sizing:content-box/border-box来声明
 content-box:
content-box是指内容盒，内容就是盒子的边界
在content-box中
width = 内容的宽度
盒子的大小 = border + padding + 内容的宽度
 border-box:
border-box是指边框盒，边框才是盒子的边界
在border-box中
width = border + padding + 内容区
盒子的大小 = width
  用实际体会一下两者的不同:
&amp;lt;body&amp;gt; &amp;lt;div class=&amp;quot;content-box&amp;quot;&amp;gt;内容盒&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;border-box&amp;quot;&amp;gt;边框盒&amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt;  .content-box{ margin: 10px; padding:20px; border:5px solid red; box-sizing:content-box; width: 100px; } .border-box{ margin: 10px; padding:20px; border:5px solid green; box-sizing:border-box; width: 100px; }  在这两种不同的盒模型中，div的显示效果如图</description>
    </item>
    
    <item>
      <title>HTML重难点标签</title>
      <link>https://gy-coder.xyz/posts/html%E9%87%8D%E9%9A%BE%E7%82%B9%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Sat, 16 Nov 2019 15:23:52 +0800</pubDate>
      
      <guid>https://gy-coder.xyz/posts/html%E9%87%8D%E9%9A%BE%E7%82%B9%E6%A0%87%E7%AD%BE/</guid>
      <description>HTML重难点标签 a标签  作用:
 跳转到外部页面 跳转到内部锚点 跳转到邮箱或者电话号码等  属性:
 href属性:
 用途:在内部写入跳转地址 href的取值
 网址:
 http://baidu.com https://google.com //google.com  路径:
 /a/b/c a/b/c  伪协议:
 javascript伪协议:
javascript:(代码);
应用在使a标签实现点击后不跳转不刷新上
&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;查看&amp;lt;/a&amp;gt;  邮箱：点击后发送邮件给冒号后的地址
mailto:(邮箱名)
 电话号:点击后打电话给冒号后的号码
tel:电话号
  id:用于内部跳转
href=#xxx
   target属性:
 属性内容:
 _black :在新的页面打开 _self : 在单签页面打开 _top: 在顶级窗口打开 _parent : 在单签页面上一层的iframe打开   程序员命名:
如果没有程序员自命的target属性值，则新开一个名为target属性值的窗口，否则会在target属性值的窗口中跳转
    table标签  table内写的标签</description>
    </item>
    
    <item>
      <title>HTML入门</title>
      <link>https://gy-coder.xyz/posts/html%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 15 Nov 2019 22:18:26 +0800</pubDate>
      
      <guid>https://gy-coder.xyz/posts/html%E5%85%A5%E9%97%A8/</guid>
      <description>HTML 入门 HTML 的由来: HTML 是由蒂姆·伯纳斯－李(Tim Berners-Lee 创建)
HTML 的起手: 在 Vscode 中创建 html 文件后，在英文状态下输入!后按 tab 键就会生成 html 的基本结构
HTML 基本结构的含义:  &amp;lt;!DOCTYPE html&amp;gt;
告诉浏览器文档类型是 html
 &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
告诉浏览器页面的语言是英语，可以改为 zh-CN，网页的语言就是中文。在浏览器的翻译功能中，就是依赖该字段去翻译。
 &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
告诉浏览器文件的字符编码是 UTF-8
 &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot; /&amp;gt;
禁用缩放，兼容手机
 &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot; /&amp;gt;
告诉 IE 浏览器使用最新的内核
 &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
该页面的标题为 Document,用户可修改
  章节标签  标题标签 h1&amp;ndash;h6:
&amp;lt;h1&amp;gt;标题1&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;标题2&amp;lt;/h2&amp;gt; &amp;lt;h3&amp;gt;标题3&amp;lt;/h3&amp;gt; &amp;lt;h4&amp;gt;标题4&amp;lt;/h4&amp;gt; &amp;lt;h5&amp;gt;标题5&amp;lt;/h5&amp;gt; &amp;lt;h6&amp;gt;标题6&amp;lt;/h6&amp;gt;  章节标签:</description>
    </item>
    
    <item>
      <title>Git命令入门</title>
      <link>https://gy-coder.xyz/posts/git%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A8/</link>
      <pubDate>Tue, 12 Nov 2019 20:40:01 +0800</pubDate>
      
      <guid>https://gy-coder.xyz/posts/git%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A8/</guid>
      <description>命令基础 命令是计算机编程学习者所具备的基本功之一，下面我们就来简单的讨论一下命令以及所需要的知识点 命令所需要的英语词汇: 为了加深对命令内容的理解，我们简单的介绍一些涉及命令的基本词汇。  file &amp;ndash;&amp;gt; 文件 remove &amp;ndash;&amp;gt; 删除 recursive &amp;ndash;&amp;gt; 递归的 make &amp;ndash;&amp;gt; 制作 copy &amp;ndash;&amp;gt; 拷贝 link &amp;ndash;&amp;gt; 链接 move &amp;ndash;&amp;gt; 移动 list &amp;ndash;&amp;gt; 列表 echo &amp;ndash;&amp;gt; 回声 touch &amp;ndash;&amp;gt; 触摸 change &amp;ndash;&amp;gt; 改变 directory &amp;ndash;&amp;gt; 目录 force &amp;ndash;&amp;gt; 强制  命令的缩写:
 file &amp;ndash; 无 remove &amp;ndash; rm recursive &amp;ndash; 无 make &amp;ndash; mk copy &amp;ndash; cp link &amp;ndash;ls move &amp;ndash; mv list &amp;ndash; ls echo &amp;ndash; echo touch &amp;ndash; touch change &amp;ndash; cd 中的 c directory &amp;ndash; cd 中的 d force &amp;ndash; f  用命令对文件进行增删改查的操作:  查看文件与目录:</description>
    </item>
    
    <item>
      <title>如何用hugo搭建个人博客</title>
      <link>https://gy-coder.xyz/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 10 Nov 2019 16:59:37 +0800</pubDate>
      
      <guid>https://gy-coder.xyz/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>安装  在Mac上 在Mac上安装hugo非常方便，仅需要两个命令就可以完成
brew install hugo  验证hugo的安装是否成功
hugo version  在Windows上
 去Hugo release页面下载hugo_xxx_Windows-64bit.zip 解压，把hugo.exe放到D:\Software\hugo\hugo.exe 把D:\Software\hugo\加到PATH中 重启终端，运行hugo version查看版本    快速搭建博客  进入Hugo官网，点击Quick Start 从Step 2到Step 7按照网页上的内容依次操作 操作完毕后会得到一个public目录，这就是我们的博客站点 创建.gitignore文件，在文件内写入/public/
(注：讲public与hugo的内容分离，上传到两个分支) 进入目录操作 (注：将public上传到本地的git仓库)
 cd public(进入public目录中) git init git add . git commit   在GitHub中创建一个仓库，名为(用户名).github.io
 例如：Gy-coder.github.io  远程提交: (注：确保cd的是public，因为只上传public到.github.io仓库中)
 git remote add origin (你的SSH地址)
 git push -u origin master
  点击 setting，找到GitHub Pages，然后点击链接就可以看到blog的内容了</description>
    </item>
    
  </channel>
</rss>